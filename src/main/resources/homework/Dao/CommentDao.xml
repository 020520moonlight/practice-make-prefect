<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="homework.Dao.CommentDao">
    <resultMap id="commentResultMap" type="homework.Do.CommentDo">
        <id column="id" property="id"/>
        <result column="ref_id" property="refId" />
        <result column="user_id" property="userId" />
        <result column="parent_id" property="parentId" />
        <result column="content" property="content" />
        <result column="gmt_created" property="gmtCreated" />
        <result column="gmt_modified" property="gmtModified" />
    </resultMap>

    <resultMap id="commentModelResultMap" type="homework.Model.Comment">
        <id column="id" property="id"/>
        <result column="ref_id" property="refId" />
        <result column="parent_id" property="parentId" />
        <result column="content" property="content" />
        <result column="gmt_created" property="gmtCreated" />
        <result column="gmt_modified" property="gmtModified" />
        <association property="author" javaType="homework.Model.User">
            <id column="user_id" property="id" />
            <result column="username" property="username" />
        </association>
    </resultMap>
    
    <insert id="add" parameterType="homework.Do.CommentDo" useGeneratedKeys="true" keyProperty="id">
        insert into `comment` (ref_id,user_id,parent_id,content,gmt_created,gmt_modified)
        values (#{refId},#{userId},#{parentId},#{content},now(),now());
    </insert>

    <update id="update" parameterType="homework.Do.CommentDo">
        update from `comment`
        <set>
            <if test="content != null">
                content=#{content}.
            </if>
            gmt_modified=now()
        </set>
        where id=#{id}
    </update>

    <delete id="delete">
        delete from `comment` where id=#{id}
    </delete>

    <select id="findAll" resultMap="commentResultMap">
        select id,ref_id,user_id,parent_id,content,gmt_created,gmt_modified
        from `comment`
    </select>

    <insert id="batchadd" parameterType="java.util.List" useGeneratedKeys="true" keyProperty="id">
        insert into `comment` (ref_id,user_id,parent_id,content,gmt_created,gmt_modified)
        values
            <foreach collection="list" index="index" item="it" separator=",">
                (#{it.refId},#{it.userId},#{it.parentId},#{content},now(),now())
            </foreach>
    </insert>

    <select id="findByRefId" resultMap="commentModelResultMap">
        select c.*,u.user_id from `comment`c left join `user` u
        on c.user_id=u.id where c.ref_id=#{refId} order by c.gmt_created desc
    </select>

    <select id="findByUserId" resultMap="commentResultMap">
        select id,ref_id,user_id,parent_id,content,gmt_created,gmt_modified
        from `comment` where user_id in
        <foreach collection="userIds" item="item" index="index" separator="," open="(" close=")">
            #{item}
        </foreach>
    </select>
</mapper>